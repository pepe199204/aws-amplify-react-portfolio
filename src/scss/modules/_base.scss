*{
  box-sizing: border-box;
}
html {
font-size: 62.5%;
font-weight: lighter;
}

body {
margin: 0;
padding: 0;
font-size: 1.8rem;
font-family: $font-main;
color: $color-main;
background-color: $color-backgrounds;
min-width: $extraSmall;
}
.header {
display: flex;
justify-content: flex-end;
flex-direction: row;
width: 100%;
height:auto;
position: fixed;
padding: 3px;
top: 0;
left: 0;
background-color: $gray;
z-index: 1;


}
.section {
display:block;
color: $white;
margin: 0 auto;
width: 90%;
h2{
  color: $green;
  font-size: 40px;
}
h3{
  color: $green;
  font-size: 20px;
}
p {
  font-size: 20px;
}
transition: 0.2s;

}
ul {
  list-style: none;
  column-count: 3;
  align-self: auto;
  align-items: stretch;
  flex-direction: row;
  flex-wrap: wrap;
}
.flexContainer {
display: grid;
grid-template-columns: repeat(3, 1fr);
align-content:space-around;
justify-content:left;

@media screen and (max-width: $medium ){

  grid-template-columns: repeat(2, 1fr);
}
@media screen and (max-width: $small ){

  grid-template-columns: repeat(1, 1fr);
}
@media screen and (max-width: $extraSmall ){

  grid-template-columns: repeat(1, 1fr);
}
}
.flexContainerWork {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  }
.itemFlex {
padding: 10px;
width: 30%;
}
.itemFlexWork {
display: flex;
flex-direction: column;
align-items: center;
justify-content: center;
cursor: pointer;
text-align: center;
transition: 0.2s;
font-size: 25px;
padding: 20px;
  &:hover{
    transform: scale(1.05);
    transition: 0.2s;

  }
.boldSkills{
  font-weight: bold;
  color: $green;
}  

@media screen and (max-width: $medium + 500px ){

  width: auto;
  font-size: 30px;
}


}
.subItemFlex {
padding: 0 15px;
}
.arrowList {
font-size: small;
padding-right: 4px;
color: $green;
}

.arrowListE {
font-size: small;
padding-right: 4px;
color: $green;
}
.ulExperience {
list-style: none;
column-count: 1;
margin: 0;
}
.experienceE {
color: $softgray;
font-weight: lighter;
}
ul li::before {
content: "\2022";
color: $green;
font-weight: bold;
display: inline-block;
width: 1em;
margin-left: -1em;
font-size: 20px;
padding: 0;
}
hr {
border: 1px dashed $gray;
}

.container {
width: 80%;
height: auto;
margin: 80px auto;
justify-content: space-between;
align-items: center;
padding: 20px;
border: 1px dashed $gray;
}

.img {
width: 100%;
border: 3px solid $green;

}
$color-headlines: $blue, $purple, $green,
$red, $orange, $yellow;

h1,h2,h3,h4,h5,h6 {
font-family: $font-main;
}

.btn {
display:block;
color: $white;
padding: 10px 10px;
cursor: pointer;
text-decoration: none;
font-size: 26px;
margin-right: 5px;
transition: 0.2s;
text-align: center;

@media screen and (max-width: $medium ){

  font-size: 24px;
  margin-right: 0px;
  padding-left: 0px;
}
@media screen and (max-width: $small ){

  font-size: 18px;
}
@media screen and (max-width: $extraSmall ){

  font-size: 16px;
  padding-right: 4px;
}


&:hover {
  // animation: 1s ease-in-out both fade-in;
  transform: scale(1.1);
  transition: 0.2s;
  color: $green;
  
}
//border: 1px dashed $green;

}
a{
color: inherit; /* blue colors for links too */
text-decoration: inherit; /* no underline */
}
input, button, submit { 
border:none; 
background-color: inherit;
} 
button:focus {
outline:0;
}
.socialNetwork {
background-color: inherit;
width: 40px;
height: 40px;

@media screen and (max-width: $medium ){

  width: 25px;
  height: 25px;
}
@media screen and (max-width: $small ){

  width: 20px;
  height: 20px;
}


}
footer {
color: $white;
text-align: center;
font-size: large;
}
.heart{
color: $green;
}




.sectionAnimation {
@extend .section;
}


/* This fires as soon as the element enters the DOM*/
.sectionAnimation-enter {
/*We give the list the initial dimension of the list button*/
opacity: 0;
  button{
    transform: scale(0);
  }
  div{
    opacity: 0;
    transform: scale(0);
  }

}
/* This is where we can add the transition*/
.sectionAnimation-enter-active {
  opacity: 0;
  button{
    transform: scale(0);
  }
  div{
    opacity: 0;
    transform: scale(0);
  }
  transition: opacity 400ms, transform 300ms;
  
}
/* This fires as soon as the this.state.showList is false */
.sectionAnimation-exit {
  opacity: 0;
  transform: scale(2);
  transition: opacity 400ms, transform 300ms;
}
/* fires as element leaves the DOM*/
.sectionAnimation-exit-active {
  opacity: 0;
  transform: scale(1);
  transition: opacity 400ms, transform 300ms;
}